name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  # Optional: Install Minikube (uncomment if needed)
  setup-minikube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Minikube (optional)
        uses: manusa/actions-setup-minikube@v2.11.0
        with:
          minikube version: 'v1.33.0'
          kubernetes version: 'v1.33.0' # Corrected input key
        
  # Build and push image (or build locally, comment out push step)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub (optional, for push)
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build, tag, and push image to DockerHub (or build locally)
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          IMAGE_NAME: my-image1
        run: |
          docker build -t $DOCKER_USERNAME/$IMAGE_NAME .
          # Optional: Comment out if building locally
          docker push $DOCKER_USERNAME/$IMAGE_NAME:latest

  # Test with pytest (existing job)
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest
          pytest test.py

  # Deploy to Minikube
  deploy:
    runs-on: ubuntu-latest
    needs:  # This ensures deploy runs after build (or setup-minikube if used)
      - build  # Replace with 'setup-minikube' if you use the optional setup job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker (optional, if using local image)
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Apply deployment manifest
        run: |
          kubectl apply -f deployment.yaml
